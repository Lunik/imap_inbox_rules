# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python CI

on:
  pull_request:
    branches: [ master, develop ]

  # Manually running a workflow
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        python_version: ['3.x']
        java_verion: ['11']
        os: [ubuntu-latest]

    name: Test with Python ${{ matrix.python_version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    env:
      TEST_IMAP_HOST: "127.0.0.1"
      TEST_IMAP_PORT: "3143"
      TEST_IMAP_API_HOST: "127.0.0.1"
      TEST_IMAP_API_PORT: "8080"
      TEST_IMAP_USERNAME: "user"
      TEST_IMAP_PASSWORD: "password"

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: ${{ matrix.java_verion }}
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python_version }}

    - name: Donwload lightweight IMAP server
      env:
        GREENMAIL_VERSION: "1.6.3"
      run: |
        wget \
          https://repo1.maven.org/maven2/com/icegreen/greenmail-standalone/${GREENMAIL_VERSION}/greenmail-standalone-${GREENMAIL_VERSION}.jar \
          -O greenmail-standalone.jar

    - name: Setup env
      run: |
        echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV
        printenv > $(pwd)/.env

    - name: Setup requirements
      run: |
        python -m pip install --upgrade pip

        pip3 install -r requirements.txt
        pip3 install -r requirements.test.txt

    - name: Test lint
      continue-on-error: true
      run: |
        pylint imapinboxrules/

    - name: Start IMAP server
      run: |
        java \
          -Dgreenmail.imap.hostname=${TEST_IMAP_HOST} \
          -Dgreenmail.imap.port=${TEST_IMAP_PORT} \
          -Dgreenmail.api.hostname=${TEST_IMAP_API_HOST} \
          -Dgreenmail.api.port=${TEST_IMAP_API_PORT} \
          -Dgreenmail.users=${TEST_IMAP_USERNAME}:${TEST_IMAP_PASSWORD} \
          -jar greenmail-standalone.jar &

        echo $! > imap-server.pid

        timeout=60
        while true; do
          echo "Wait for IMAP server to start"
          running=$(curl -sSL http://${TEST_IMAP_API_HOST}:${TEST_IMAP_API_PORT}/api/service/readiness | grep "Service running" | wc -l)
          if [ "$running" -eq "1" ]; then
            break
          fi
          timeout=$((timeout-1))
          if [ "$timeout" -eq "0" ]; then
            exit 1
          fi
          sleep 1s
        done

    - name: Init IMAP server data
      run: |
        python imapinboxrules/tests/init/setup.py

    - name: Test app
      run: |
        pytest \
          --cov imapinboxrules \
          --cov-branch \
          --cov-report term-missing \
          --cov-report xml

    - name: Stop IMAP server
      run: |
        kill $(cat imap-server.pid)

    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        flags: unittests
        name: github-action
        fail_ci_if_error: false
        verbose: true
        

    - name: Fix coverage file for SonarCloud Scan
      run: |
        sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace@g' coverage.xml
        grep source coverage.xml 
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
